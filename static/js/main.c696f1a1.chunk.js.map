{"version":3,"sources":["App.js","components/Card.js","components/Modifier.js","components/Result.js","components/Die.js","serviceWorker.js","index.js","components/Icon.js"],"names":["Heading","styled","h1","Top","div","Body","CardBox","diceList","name","sides","qty","modifier","vantage","active","App","useState","roll","setRoll","dice","setDice","die","setDie","setActive","history","updateHistory","randomise","min","max","i","rand","Math","round","random","arr","reduce","a","b","console","log","push","_addModifier","length","indexOf","pop","map","match","_updateDie","_removeModifier","index","splice","_clearAll","_rolled","vantageArr","result","value","mod","parseInt","curr","replace","floor","eval","newRoll","_increment","inc","val","_toggle","newDie","className","style","color","key","rolled","update","increment","rmodifier","props","Card","onClick","_setActive","size","ModifierBox","ModSelect","SelectButton","ModButton","Button","ModSpinner","Spinner","ModGroup","ToggleButton","toggle","ModForm","form","Modifier","modType","setModType","setMod","setToggle","label","toString","onSubmit","event","preventDefault","options","onChange","e","input","target","ResultBox","Title","h3","Highlight","span","Num","h4","Result","results","sum","type","Dice","H1","H3","Box","TitleBox","RollBox","QtyBox","DieList","Increment","Roller","SplitButton","Die","vantages","command","setVantage","Icon","inline","model","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","IconSVG","ReactSVG","rgb","IconBox","src","color1","color2","value1","value2","join","calcColor"],"mappings":"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","file":"static/js/main.c696f1a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./components/Card\";\r\nimport Die from \"./components/Die\";\r\nimport \"./App.css\";\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nconst Heading = styled.h1`\r\n  color: white;\r\n  font-size: 60pt;\r\n  margin: 0;\r\n  -webkit-user-select: none;  \r\n  -moz-user-select: none;    \r\n  -ms-user-select: none;      \r\n  user-select: none;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  height: 300px;\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  display: block;\r\n  border-radius: 30px 30px 0 0;\r\n  background: rgb(36,37,39);\r\n  background: linear-gradient(to right top, #242527, #25242d, #2b222f, #351e2d, #3e1925);\r\n  filter: brightness(1.1);\r\n`;\r\n\r\nconst Body = styled.div`\r\n  height: 100%;\r\n  width: 80%;\r\n  margin: auto;\r\n  display: block;\r\n`;\r\n\r\nconst CardBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;  \r\n  margin-top: 50px;\r\n`;\r\n\r\nconst diceList = [\r\n  { name: \"d4\", sides: 4, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"d6\", sides: 6, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"d8\", sides: 8, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"d10\", sides: 10, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"d12\", sides: 12, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"d20\", sides: 20, qty: 1, modifier: [], vantage: null, active: false },\r\n  { name: \"Percentile\", sides: 100, qty: 1, modifier: [], vantage: null, active: false }\r\n];\r\n\r\nfunction App() {\r\n  const [roll, setRoll] = useState([]);\r\n  const [dice, setDice] = useState(diceList);\r\n  const [die, setDie] = useState(null);\r\n  const [active,setActive] = useState(null);\r\n  const [history,updateHistory] = useState([]);\r\n\r\n  const randomise = (min, max, qty, vantage) => {\r\n    let roll = [];    \r\n    for (let i = 0; i < qty; i++) {\r\n      let rand = Math.round(min + Math.random() * (max - min));\r\n      if(vantage){\r\n        let second = Math.round(min + Math.random() * (max - min));\r\n        let arr = [rand,second]\r\n        if(vantage === 'advantage'){rand = arr.reduce((a, b) => Math.max(a, b)) + ' ('+arr+')';}\r\n        if(vantage === 'disadvantage'){rand = arr.reduce((a, b) => Math.min(a, b)) + ' ('+arr+')';}\r\n        console.log('Vantage: %s, Arr: %o',vantage,arr)\r\n      }\r\n      //if(rand === max && max === 20){rand +=' (Critical!)'}\r\n      roll.push(rand);\r\n    }\r\n    return roll;\r\n  };\r\n\r\n  const _addModifier = (die, modifier) => {\r\n    if (die.modifier.length < 3) {\r\n      die.modifier.indexOf(modifier) === -1\r\n        ? die.modifier.push(modifier)\r\n        : die.modifier.pop(modifier);\r\n      console.log(die.name);\r\n      setDice(dice.map(dice => (dice.name.match(die.name) ? die : dice)));\r\n    }\r\n  };\r\n\r\n  const _updateDie = (die) => {\r\n    setDice(dice.map(dice => (dice.name.match(die.name) ? die : dice)));\r\n  }\r\n\r\n  const _removeModifier = (die, modifier) => {\r\n    let index = die.modifier.indexOf(modifier);\r\n    index > -1 && die.modifier.splice(index, 1);\r\n    console.log(die.name);\r\n    setDice(dice.map(dice => (dice.name.match(die.name) ? die : dice)));\r\n  };\r\n  const _clearAll = die => {\r\n    die.modifier = [];\r\n    setDice(dice.map(dice => (dice.name.match(die.name) ? die : dice)));\r\n    setRoll([]);\r\n  };\r\n\r\n  const _rolled = (die, qty, modifier, vantageArr) => {\r\n    const min = 1;\r\n    const max = die.sides;\r\n    let roll = [];\r\n    let result;\r\n    let vantage = vantageArr.value;\r\n    if (modifier && modifier.length > 0) {\r\n        roll = randomise(min, max, qty, vantage);\r\n        result = roll.reduce((a, b) => parseInt(a) + parseInt(b), 0);\r\n        //let history = result;\r\n        for (let mod in modifier) {\r\n          let curr = modifier[mod];\r\n          //history += curr;\r\n          if (curr !== \"undefined\") {\r\n            curr = result + curr.replace(/[^-()\\d/*+.]/g, \"\");\r\n            //curr = result + curr;\r\n            result = Math.floor(eval(curr));\r\n          }\r\n      }\r\n    } else {\r\n      roll = randomise(min, max, qty, vantage);\r\n      result = roll.reduce((a, b) => parseInt(a) + parseInt(b), 0);\r\n    }\r\n    let newRoll = [die.name, die.qty, roll, result, modifier, vantageArr];\r\n    setRoll(newRoll);    \r\n    updateHistory([...history,newRoll]);\r\n    console.log(roll);\r\n  };\r\n\r\n  const _increment = (die, inc) => {\r\n    let val = die.qty + inc;\r\n    val < 1 && (val = 1);\r\n    die.qty = val;\r\n    setDice(dice.map(dice => (dice.name.match(die.name) ? die : dice)));\r\n  };\r\n\r\n  const _toggle = newDie => {\r\n    _clearAll(newDie);\r\n    newDie === die ? setDie(() => null) : setDie(() => newDie);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Top>\r\n      <Heading>\r\n        R<span style={{ color: \"#b94666\" }}>&</span>ller\r\n      </Heading>\r\n      <CardBox>\r\n        {dice.map((die, index) => (\r\n         <Card\r\n            die={die}\r\n            setDie={_toggle}\r\n            key={index}\r\n            index={index}\r\n            active={active}\r\n            setActive={setActive}\r\n          />\r\n        ))}\r\n      </CardBox>   \r\n      </Top>\r\n      <Body>\r\n      <Die\r\n          die={die}\r\n          rolled={_rolled}\r\n          update={_updateDie}\r\n          increment={_increment}\r\n          modifier={_addModifier}\r\n          rmodifier={_removeModifier}\r\n          setDie={_toggle}\r\n          roll={roll}\r\n          history={history}\r\n        />\r\n        </Body>      \r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Icon from './Icon'\r\n\r\nconst CardBox = styled.div`  \r\n  background: #3b3d44;\r\n  box-shadow: 0px 0px 6px 0px #331f2e;\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  padding: 15px;\r\n  color: ${props=>props.active ? '#b94666' : 'white'};\r\n  cursor: pointer;\r\n  height: 100%;\r\n  width: auto;\r\n  transition: 0.1s ease;\r\n  position: relative;  \r\n  flex: none;\r\n  width: 110px;\r\n  filter: ${props=>props.active ? 'brightness(1)': 'brightness(.8)' };\r\n  span {\r\n    position: relative;\r\n    display: block;\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    background: transparent;\r\n    color: white;\r\n  }\r\n\r\n  &:hover{\r\n    filter: brightness(1.5);\r\n  }\r\n`;\r\n\r\n\r\nconst Card = props => {  \r\n  //const [active,setActive] = useState(false);\r\n  let die = props.die;\r\n  die.index = props.index;\r\n\r\n  \r\n  const _setActive = die => {\r\n    die.active = !die.active;\r\n    props.setDie(die);\r\n    props.setActive(props.active === props.index ? null : props.index);\r\n  }\r\n  \r\n//<h4>{die.name}</h4>\r\n//<p>{die.sides} Sides</p>\r\n  return (\r\n    <CardBox className=\"Dice\" onClick={()=>_setActive(die)} active={props.active === null || props.active === props.index}>\r\n      {props.active !== props.index && (<></>)}\r\n      \r\n      <Icon die={die} index={props.index} size='md'/>\r\n    </CardBox>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"primereact/button\";\r\nimport { SelectButton } from \"primereact/selectbutton\";\r\nimport { Spinner } from \"primereact/spinner\";\r\n\r\nconst ModifierBox = styled.div`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  &&&{\r\n  .secondary{     \r\n      background-color: #2ea9bd;      \r\n      &:hover,&:focus{\r\n        background-color: #0e7d8f;\r\n      }\r\n      &:focus{\r\n        box-shadow: 0 0 2px 0.2em #2ea9bd;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModSelect = styled(SelectButton)`\r\n  display: inline-block;\r\n  &&&& {\r\n    .p-highlight {\r\n      background-color: #2ea9bd;\r\n      border-color: #2ea9bd;\r\n      &:hover {\r\n        background-color: #0e7d8f;\r\n        border-color: #2ea9bd;\r\n      }\r\n      &:focus{\r\n      box-shadow: 0 0 2px 0.2em #2ea9bd;\r\n      }\r\n    }\r\n    .p-focus {\r\n      box-shadow: 0 0 2px 0.2em #fe99ba;\r\n      border: 0;\r\n    }\r\n    button {\r\n      border: 0;\r\n      background-color: #b94666;\r\n      &:hover {\r\n        background-color: #843148;\r\n      }\r\n      &:focus {\r\n        box-shadow: 0 0 2px 0.2em #fe99ba;\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModButton = styled(Button)`\r\n&&&&{\r\n  display: inline-block;\r\n  border-radius: 10px;\r\n  background: white;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  background-color: #2ea9bd;\r\n  .p-button-text {\r\n    font-size: 16pt;\r\n  }\r\n  &:hover {\r\n    color: #242527;\r\n    background: white;\r\n  }\r\n}\r\n`;\r\n\r\nconst ModSpinner = styled(Spinner)`\r\n  &&&&{\r\n    width: 15%;\r\n    display: inline-block;\r\n    input {\r\n      width: 100%;\r\n      font-size: 18pt;\r\n      line-height: 1;\r\n      padding: 5px;\r\n      height: 100%;\r\n    }\r\n    button {\r\n      border-radius: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModGroup = styled.div`\r\n  width: 100%;\r\n  justify-content: center;\r\n  div[role=\"group\"] {\r\n    display: inline-block;\r\n  }\r\n  &&& {\r\n    button {\r\n      border: 0;\r\n      background-color: #b94666;\r\n      &:hover {\r\n        background-color: #843148;\r\n      }\r\n    }\r\n    input,\r\n    button {\r\n      &:focus {\r\n        box-shadow: 0 0 2px 0.2em #fe99ba;\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ToggleButton = styled(Button)`\r\n&&&&{  \r\n  color: ${props=>props.toggle === 'true' ? 'white' : '#0e7d8f'};\r\n  background-color: ${props=>props.toggle === 'true' ? '#2ea9bd' : 'white'};  \r\n  .p-button-text {\r\n    font-size: 16pt;\r\n  }\r\n    &:focus,&.p-button-secondary:hover{\r\n        color: ${props=>props.toggle === 'true' ? 'white' : '#0e7d8f'};\r\n        background-color: #0e7d8f;\r\n        background-color: ${props=>props.toggle === 'true' ? '#0e7d8f' : '#c8c8c8'};\r\n      }\r\n      &:focus,&.p-button-secondary:focus{\r\n      box-shadow: 0 0 2px 0.2em #2ea9bd;\r\n    }\r\n}\r\n`;\r\n\r\nconst ModForm = styled.form`\r\n  display: ${props => (props.toggle === 'true' ? \"block\" : \"none\")};\r\n  width: 70%;\r\n  margin: auto;\r\n  margin-top: 10px;  \r\n`;\r\n\r\nconst Modifier = props => {\r\n  const [modType, setModType] = useState(\"+\");\r\n  const [mod, setMod] = useState(1);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const options = [\r\n    { label: \"+\", value: \"+\" },\r\n    { label: \"-\", value: \"-\" },\r\n    { label: \"*\", value: \"*\" },\r\n    { label: \"/\", value: \"/\" }\r\n  ];\r\n\r\n  let die = props.die;\r\n\r\n  const handleInput = input => {\r\n    setMod(input.target.value);\r\n  };\r\n\r\n  return (\r\n    <ModifierBox>\r\n      {die.modifier.map((modifier, index) => (\r\n            //<Modifier mod={modifier} key={index}/>\r\n            <ModButton\r\n              key={index}\r\n              onClick={() => props.rmodifier(die, modifier)}\r\n              className='secondary'\r\n              label={modifier}\r\n            />\r\n          ))}\r\n      {die.modifier.length < 3 ? (\r\n        <ToggleButton\r\n          label={`${toggle ? \"-\" : \"+\"} Modifier`}\r\n          className=\"p-button-raised p-button-secondary\"\r\n          onClick={() => setToggle(!toggle)}\r\n          toggle={toggle.toString()}\r\n        />\r\n      ) : (\r\n        <h4>Remove a modifier to add a new one</h4>\r\n      )}\r\n      <ModForm\r\n        onSubmit={event => {\r\n          event.preventDefault();\r\n          if (!modType || !mod) return;\r\n          //props.modifier((mod+modType))\r\n          console.log(modType + mod);\r\n          props.modifier(die, modType + mod);\r\n          setMod(1);\r\n          setModType(\"+\");\r\n          setToggle(false);\r\n        }}\r\n        toggle={toggle.toString()}\r\n      >\r\n        <ModGroup className=\"p-inputgroup\">\r\n          <ModSelect\r\n            value={modType}\r\n            options={options}\r\n            onChange={e => setModType(e.value)}\r\n          />\r\n          <ModSpinner value={mod} onChange={handleInput} min={1} max={100} />\r\n          <Button className='secondary' label=\"Add\" />\r\n        </ModGroup>\r\n      </ModForm>\r\n    </ModifierBox>\r\n  );\r\n};\r\nexport default Modifier;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ResultBox = styled.div`\r\n  display: block;\r\n  background: #2c222f;\r\n  width: 80%;\r\n  margin: auto;\r\n  border-radius: 30px;\r\n  padding: 20px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  color: white;\r\n  font-size: 30pt;\r\n  margin: 5px;\r\n`;\r\n\r\nconst Highlight = styled.span`\r\n  &&& {\r\n    color: #2ea9bd;\r\n    display: inline-block;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\nconst Num = styled.h4`\r\n  color: #b94666;\r\n  display: inline-block;\r\n  font-size: 25pt;\r\n  margin: 5px;\r\n`;\r\n\r\nconst Highlighted = value => {\r\n  return <Highlight>{value}</Highlight>;\r\n};\r\n\r\nconst Result = props => {\r\n\r\n  let [name,qty,results,sum,modifier,vantage] = props.roll;\r\n\r\n  /*const diceName = props.roll[0];\r\n  const diceQty = props.roll[1];\r\n  const results = props.roll[2];\r\n  const sum = Math.floor(props.roll[3]);\r\n  const modifier = props.roll[4];\r\n  const vantage = props.roll[5];\r\n  const type = diceName === 'Percentile';*/\r\n  const type = name === 'Percentile';\r\n\r\n  return (\r\n    <ResultBox>\r\n      {results ? (\r\n        <>\r\n          <Title>\r\n            {type ? name : qty + name}            \r\n            <Highlight>\r\n              {modifier && modifier.length > 0 && ` (${modifier}) `}\r\n              {vantage && vantage.label !== \"Normal\" && `(${vantage.label})`}\r\n            </Highlight>\r\n          </Title>\r\n          {results.map((result, index) => (\r\n            <Num key={index}>\r\n              {result}\r\n              {results.length > 0 && index < results.length - 1 && \" + \"}\r\n            </Num>\r\n          ))}\r\n          <Num>{modifier && modifier.length > 0 && ` ( ${modifier} )`}</Num>\r\n          <Title>\r\n            Result:<Highlight>{sum}{type && '%'}</Highlight>\r\n          </Title>\r\n        </>\r\n      ) : (\r\n        <Title>Roll something!</Title>        \r\n        \r\n      )}\r\n    </ResultBox>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport { SplitButton } from \"primereact/splitbutton\";\r\nimport { Spinner } from 'primereact/spinner';\r\nimport styled from \"styled-components\";\r\nimport Modifier from \"./Modifier\";\r\nimport Result from \"./Result\";\r\nimport Icon from \"./Icon\";\r\n\r\nconst Dice = styled.div`\r\n  border-radius: 50px;\r\n  background: #2c222f;\r\n  background: #3b3d44;\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  color: #b94666;\r\n  height: 50vh;\r\n  width: 100%;  \r\n  transition: 0.2s ease-in-out;\r\n  position: relative;\r\n  &&&{\r\n    .secondary {\r\n      background-color: #2ea9bd;      \r\n    }\r\n    button {\r\n      border: 0;\r\n    }\r\n    input, button{\r\n      &:focus {\r\n        box-shadow: 0 0 2px 0.2em #fe99ba;\r\n        border: 0;\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  color: #b94666;\r\n  font-size: 35pt;\r\n`;\r\nconst H3 = styled.h3`\r\n  color: #2ea9bd;\r\n  font-size: 25pt;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n`;\r\nconst TitleBox = styled.div`\r\n  flex: 0 0 40%;\r\n  height: 100%;\r\n  border-radius: 30px;\r\n  background: #2c222f;\r\n  box-shadow: -2px 5px 12px 0px #242528;\r\n`;\r\nconst RollBox = styled.div`\r\n  flex: 0 0 58%;\r\n  height: 100%;\r\n  border-radius: 30px;\r\n  padding: 30px;\r\n  &&&{    \r\n    .p-button-text {\r\n      font-size: 20pt;\r\n      line-height: 1;\r\n      font-weight: bold;\r\n    }\r\n    .p-menuitem {\r\n      font-size: 18pt;\r\n    }\r\n  }\r\n`;\r\n\r\nconst QtyBox = styled.div`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst DieList = styled.div`  \r\n&&&{\r\n    display: block;  \r\n    margin: 15px 0;\r\n    .icon-box {      \r\n      display: inline-block;\r\n      margin: 0 10px;\r\n      transition: 0.2s ease;\r\n      /*&:hover{animation: pulse .5s infinite;}*/\r\n    }\r\n    @keyframes pulse {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    25% {\r\n      transform: rotate(70deg);\r\n    }\r\n    50% {\r\n      transform: rotate(0deg);\r\n    }\r\n    75% {\r\n      transform: rotate(-70deg);\r\n\r\n    }\r\n    100% {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst Increment = styled(Spinner)`\r\n&&&{\r\n  display: block;\r\n  width: 30%;  \r\n  max-width: 200px;\r\n  margin: auto;\r\n  box-sizing: border-box;\r\n\r\n  input {\r\n    display: block;\r\n    text-align: center;\r\n    padding: 15px 0 !important;    \r\n    width: 100%;\r\n    font-size: 18pt;\r\n    font-weight: bold;\r\n    color: #b94666;    \r\n  }\r\n  button {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top:0;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    span {\r\n      transform: rotate(90deg);\r\n    }\r\n\r\n    background-color: #b94666;\r\n    &:hover{\r\n      background-color: #843148;\r\n    }\r\n\r\n    &.p-spinner-button-up{\r\n      right: 0;      \r\n    }\r\n    &.p-spinner-button-down{\r\n      left: 0;\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst Roller = styled(SplitButton)`\r\n  &&&{\r\n  width: 50%;\r\n  display: block;\r\n  margin: auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  /*max-width: 250px;*/  \r\n \r\n\r\n  button {\r\n    background-color: #b94666;\r\n    background-color: ${props=>props.vantage==='Normal' ? '#b94666' : '#2ea9bd'};\r\n    border-radius: 0;\r\n    height: 100%;\r\n    font-size: 12pt;\r\n    transition: all 0.5s ease;\r\n\r\n    &:hover{\r\n      background-color: #843148;\r\n      background-color: ${props=>props.vantage==='Normal' ? '#843148' : '#0e7d8f'};\r\n    }\r\n  }\r\n  .p-button-text {    \r\n    font-size: 25pt;\r\n    line-height: 1;\r\n    white-space: nowrap;\r\n  } \r\n  .p-button-text-only { width: 90%; }\r\n  .p-button-icon-only { width: 10%; }\r\n  }\r\n`;\r\n\r\nconst Die = props => {\r\n  const vantages = [\r\n    { label: \"Normal\", value: null, command: (e)=>{ setVantage(vantages[0]) } },\r\n    { label: \"Advantage\", value: \"advantage\",command: (e)=>{ setVantage(vantages[1]) } },\r\n    { label: \"Disadvantage\", value: \"disadvantage\",command: (e)=>{ setVantage(vantages[2]) } }\r\n  ];\r\n  const [vantage, setVantage] = useState(vantages[0]);\r\n\r\n  let die = props.die;\r\n  const diceList = () => {\r\n    let dice = [];\r\n    let i = 1;\r\n    while (i <= die.qty) {\r\n      //dice.push(<DieVis key={i}>{i}</DieVis>);\r\n      dice.push(<Icon die={die} index={die.index} key={i} size='sm' inline/>);\r\n      i++;\r\n    }\r\n    return dice;\r\n  }\r\n  \r\n  const setQty = qty => {\r\n    die.qty = qty;\r\n    props.update(die);\r\n  }\r\n\r\n  return (\r\n    <Dice className=\"Dice\">\r\n      <Box>\r\n        {die ? (\r\n          <>\r\n        <TitleBox>\r\n          <Icon die={die} index={die.index} size='lg' className='App-logo'/>\r\n          <H1>{die.name}</H1>\r\n          <H3>{die.sides} Sides</H3>          \r\n        </TitleBox>\r\n        <RollBox>  \r\n          <QtyBox>\r\n          <Increment value={die.qty} onChange={(e) => setQty(e.value)} min={1} max={10} />\r\n          <DieList>{diceList()}</DieList>\r\n          </QtyBox> \r\n          <Modifier rmodifier={props.rmodifier} modifier={props.modifier} die={die} />\r\n          <Roller vantage={vantage.label} label={vantage.value ? `Roll ${vantage.label}` : 'Roll'} onClick={() => props.rolled(die, die.qty, die.modifier, vantage)} model={vantages}></Roller>          \r\n          <Result diceList={diceList()} roll={props.roll} />\r\n        </RollBox>\r\n        </>)\r\n        : (<>\r\n        <TitleBox>\r\n            <H1>Prepare to Die</H1>      \r\n        </TitleBox>\r\n        <RollBox>\r\n          <H3>Choose a die to begin rolling</H3>\r\n        </RollBox>\r\n        </>)\r\n          }\r\n          \r\n\r\n      </Box>\r\n    </Dice>\r\n  );\r\n};\r\nexport default Die;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ReactSVG } from \"react-svg\";\r\n\r\nconst IconSVG = styled(ReactSVG)`  \r\n  svg {\r\n    width: 50px;\r\n    width: ${props =>\r\n      props.name === \"Percentile\" ? (props.size * 0.8)+'px' : props.size+'px'};\r\n    height: 50px;\r\n    height: ${props =>\r\n      props.size+'px'};\r\n    fill: #2ea9bd;\r\n    fill: ${props => (props.rgb ? props.rgb : \"#2ea9bd\")};\r\n  }\r\n`;\r\nconst IconBox = styled.div`\r\n    display: ${props => props.inline ? 'inline-block' : 'block'};\r\n    margin: ${props => props.inline ? '0 10px' : ''};\r\n`;\r\n\r\nconst Icon = props => {\r\n  const index = props.index;\r\n\r\n  const calcColor = (color1, color2, index) => {\r\n    let value1 = ((100 / 6) * index) / 100;\r\n    let value2 = 1 - value1;\r\n    let rgb = [\r\n      Math.round(color1[0] * value1 + color2[0] * value2),\r\n      Math.round(color1[1] * value1 + color2[1] * value2),\r\n      Math.round(color1[2] * value1 + color2[2] * value2)\r\n    ];\r\n    return \"rgb(\" + rgb.join(\",\") + \")\";\r\n  };\r\n\r\n  return (\r\n    <IconBox className='icon-box'>\r\n        <IconSVG\r\n        size={(props.size === \"lg\" && 150) || (props.size === \"md\" && 80) || (props.size === 'sm' && 50)}\r\n        src={`prepare-to-die/icons/dice-${props.die.name}.svg`}\r\n        rgb={calcColor([185, 70, 102], [46, 169, 189], index)}\r\n        name={props.die.name}              \r\n        />\r\n    </IconBox>\r\n  );\r\n};\r\nexport default Icon;\r\n"],"sourceRoot":""}